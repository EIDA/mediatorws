# The port of the header processor (see below)
Listen 8002

<VirtualHost *:80>
  DocumentRoot "/var/www/html"
  ServerName localhost

  # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
  # error, crit, alert, emerg.
  # It is also possible to configure the loglevel for particular
  # modules, e.g.
  #LogLevel info ssl:warn

  ErrorLog ${APACHE_LOG_DIR}/error.log
  CustomLog ${APACHE_LOG_DIR}/access.log combined

  # Stopping the thundering herd up to 60 sec.
  # i.e. if an identical request triggers a cache miss, this request is halted
  # up to 30 sec. for the response to appear in cache, rather than to trigger a
  # second, parallel cache miss. This prevents endpoints in case of immediately
  # rising interest for one specific piece of data.
  CacheLock               on
  CacheLockPath           /tmp/mod_cache-noa-lock
  CacheLockMaxAge         30

  CacheIgnoreCacheControl on
  CacheIgnoreNoLastMod    on
  CacheStoreExpired       on
  CacheStoreNoStore       on

  # Cache regex e.g. via LocationMatch (normal handler only)
  CacheQuickHandler       off

  # Cache fdsnws-station
  <LocationMatch "^/(.*)/fdsnws/station/(.*)$">
    # XXX(damb): Caching applies only to GET requests.
    CacheEnable disk
    CacheHeader           on
    CacheDetailHeader     on
    CacheIgnoreNoLastMod  on

    # Cache for up 60 to minutes
    CacheMaxExpire 3600
    # On cache miss, forward the request to the header processor
    ProxyPass "http://localhost:8002/$1/fdsnws/station/$2" timeout=30
    ProxyPassReverse "http://localhost:8002/$1/fdsnws/station/$2"
  </LocationMatch>

  # No caching on fdsnws-event
  <LocationMatch "^/(.*)/fdsnws/event/(.*)$">
    ProxyPass "http://$1/fdsnws/event/$2"
    ProxyPassReverse "http://$1/fdsnws/event/$2"
  </LocationMatch>

  # No caching on fdsnws-dataselect
  # (Alternatively, fdsnws-dataselect requests could be treated as
  # fdsnws-station requests.)
  <LocationMatch "^/(.*)/fdsnws/dataselect/(.*)$">
    ProxyPass "http://$1/fdsnws/dataselect/$2"
    ProxyPassReverse "http://$1/fdsnws/dataselect/S2"
  </LocationMatch>

  # No caching on eidaws (currently, eidaws-wfcatalog, only)
  # (Alternatively, eidaws-wfcatalog requests could be treated as
  # fdsnws-station requests.)
  <LocationMatch "^/(.*)/eidaws/(.*)$">
    ProxyPass "http://$1/eidaws/$2"
    ProxyPassReverse "http://$1/eidaws/$2"
  </LocationMatch>

</VirtualHost>


# Header processor
<VirtualHost *:8002>

  # Fix the Cache-Control header.
  Header merge Cache-Control public
  # The max-age is a pain. We have to set one if it's not set, and we have to
  # change it if it's 0.
  Header merge Cache-Control "max-age=bidon"
  # Case when we have: Cache-Control max-age=.., ....
  Header edit  Cache-Control "^(.*)max-age=(.*)max-age=bidon, (.*)$" $1max-age=1800$3
  # Case when we have: Cache-Control yyy=bidon, max-age=.."
  Header edit  Cache-Control "^(.*)max-age=(.*), max-age=bidon$" $1max-age=1800
  # Now Replace the value if there was not a max-age, set to 30mn
  Header edit  Cache-Control "max-age=bidon" "max-age=1800"
  # Now Replace the value if there was a max-age=0, set to 30mn
  Header edit  Cache-Control "max-age=0" "max-age=1800"

  # XXX(damb): Modifying Cache-Control headers violates RFC2616
  # (https://tools.ietf.org/html/rfc2616#section-14.9).
  # ----
  # Remove Cache-Control parameters potentially coming from the endpoint
  # which might prevent caching.
  # (Note that operations on the response are executed bottom-up)
  Header edit Cache-Control "no-cache, " ""
  Header edit Cache-Control "no-store, " ""
  Header edit Cache-Control "post-check=0, " ""
  Header edit Cache-Control "pre-check=0, " ""
  Header edit Cache-Control "must-revalidate, " ""
  Header merge Cache-Control "s-maxage=1800"

  <LocationMatch "^/(.*)">
    ProxyPass "http://$1"
    ProxyPassReverse "http://$1"
  </LocationMatch>

</VirtualHost>
