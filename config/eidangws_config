# This is <eidangws_config>

[CONFIG_FEDERATOR]
# Configuration section for the EIDA NG Federator Webservice. Note, that
# commandline parameters passed is given priority over options set within this
# file. The syntax for option setting is:
# 
# key=value
#
# You obtain additional information as well as default configuration values
# when entering:
#
# $ eida-federator-test -h
# 
# See also the Python configparser module documentation:
#   - https://docs.python.org/library/configparser.html
#
# -----------------------------------------------------------------------------
# Set the eida-stationlite routing service url and identifier. (default:
# http://localhost/eidaws/routing/1/)
#
# routing=SERVICE_URL/IDENTIFIER
#
# ----
# Enable/disable federator endpoint resources. Choices are: 
# {fdsnws-dataselect, fdsnws-station, eidaws-wfcatalog}. By default all
# endpoint resources are enabled.
#
# endpoint_resources = fdsnws-dataselect fdsnws-station eidaws-wfcatalog
#
# ----
# Configure federator resources (JSON syntax required). The default
# configuration is:
#
# resource_config='{
#  "fdsnws-dataselect":
#   {"num_threads": 10,
#    "request_strategy": "granular",
#    "request_method": "POST"},
#  "fdsnws-station-xml":
#   {"num_threads": 5,
#    "request_strategy": "adaptive-bulk",
#    "request_method": "POST"},
#  "fdsnws-station-text": 
#   {"num_threads": 10,
#    "request_strategy": "bulk",
#    "request_method": "POST"},
#  "eidaws-wfcatalog":
#   {"num_threads": 10,
#    "request_strategy": "granular",
#    "request_method": "POST"}}'
# 
# NOTE: For "fdsnws-station-xml" the number of download threads ("num_threads")
# scales squared.
#
# ----
# Configure where temporary files will be located.
# 
# tmpdir=/path/to/tmpdir
#
# ----
# Keep temporary files the service is generating. Choices are: {all, none,
# on-errors}; The default configuration is: none
#
# keep_tempfiles = none
#
# ----
# Set the path to a logging configuration file. For information on howto setup
# a logging configuration file visit the official Python documentation:
# https://docs.python.org/3/library/logging.config.html#configuration-file-format
#
# path_logging_conf=/path/to/logging.conf
#
# ----
# Set the port number the local Flask WSGI server is serving
# (eida-federator-test only)
# 
# port=PORT
#
# ----------------------------------------------------------------------------
[CONFIG_STATIONLITE]
# Configuration section for the EIDA StationLite Webservice. Note, that
# commandline parameters passed is given priority over options set within this
# file. The syntax for option setting is:
#
# key=value
#
# You obtain additional information as well as default configuration values
# when entering:
#
# $ eida-stationlite-test --help
#
# See also the Python configparser module documentation:
#   - https://docs.python.org/library/configparser.html
#
# -----------------------------------------------------------------------------
# Prepend a constant network location to routed URLs. This option may be used
# if requests are redirected e.g. when using a proxy. See also:
# https://tools.ietf.org/html/rfc1738#section-3.1
#
# proxy_netloc = '//[user[:password]@]host[:port]
#
# ----
# DB URL indicating the database dialect and connection arguments. For SQlite
# only a absolute file path is supported.
# See also:
# http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls
#
# db_url = sqlite:////abs/path/to/stationlite.db
#
# ----
# Set the path to a logging configuration file. For information on howto setup
# a logging configuration file visit the official Python documentation:
# https://docs.python.org/3/library/logging.config.html#configuration-file-format
#
# path_logging_conf=/path/to/logging.conf
#
# ----
# Set the port number the local Flask WSGI server is serving
# (eida-stationlite-test only).
#
# port=PORT
#
# ----------------------------------------------------------------------------
[CONFIG_STATIONLITE_HARVEST]
# Configuration section for the EIDA StationLite Harvesting. Note, that
# commandline parameters passed is given priority over options set within this
# file. The syntax for option setting is:
#
# key=value
#
# You obtain additional information as well as default configuration values
# when entering:
#
# $ eida-stationlite-harvest --help
#
# See also the Python configparser module documentation:
#   - https://docs.python.org/library/configparser.html
#
# -----------------------------------------------------------------------------
# Path to PID (lock) file.
# (default: /var/tmp/eida-stationlite-harvesting.pid)
#
# path_pidfile = /path/to/eida-stationlite-harvest/pidfile
# ----
# Exclude EIDA nodes from harvesting. A whitespace separated list of nodes to
# be excluded. Choices are: {bgr, eth, gfz, ingv, ipgp, koeri, lmu, niep, noa,
# odc, resif}.
#
# nodes_exclude = bgr eth gfz
#
# ----
# Do not harvest <route></route> information while harvesting.
# (default: False)
#
# no_routes={True,False}
#
# ----
# Do not harvest <vnetwork></vnetwork> information while harvesting.
# (default: False)
#
# no_vnetworks={True,False}
#
# ----
# Truncate DB i.e. delete outdated information. The TIMESTAMP format must agree
# with formats supported by obspy.UTCDateTime.
# See also:
# https://docs.obspy.org/packages/autogen/obspy.core.utcdatetime.UTCDateTime.html
#
# truncate=2017-01-01T00:00:00
#
# ----
# Set the path to a logging configuration file. For information on howto setup
# a logging configuration file visit the official Python documentation:
# https://docs.python.org/3/library/logging.config.html#configuration-file-format
#
# path_logging_conf=/path/to/logging.conf
#
# ----
# DB URL indicating the database dialect and the connection arguments.
# See also:
# http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls
#
# db_engine = sqlite:////abs/path/to/stationlite.db
#
# ---- END OF <eidangws_config> ----
